#!/usr/bin/env python3

"""
Fire Emblem data mappings utility

Maps raw game values to their human-readable equivalents:
- Item IDs to item names
- Character IDs (portraits) to character names
- Class IDs to class names
"""

# Item ID to name mapping
ITEM_NAMES = {
    0x00: "Nothing",
    0x01: "Iron Sword",
    0x02: "Slim Sword",
    0x03: "Steel Sword",
    0x04: "Silver Sword",
    0x05: "Iron Blade",
    0x06: "Steel Blade",
    0x07: "Silver Blade",
    0x08: "Poison Sword",
    0x09: "Rapier",
    0x0A: "Mani Katti",
    0x0B: "Brave Sword",
    0x0C: "Wo Dao",
    0x0D: "Killing Edge",
    0x0E: "Armorslayer",
    0x0F: "Wyrmslayer",
    0x10: "Light Brand",
    0x11: "Runesword",
    0x12: "Lancereaver",
    0x13: "Longsword",
    0x14: "Iron Lance",
    0x15: "Slim Lance",
    0x16: "Steel Lance",
    0x17: "Silver Lance",
    0x18: "Poison Lance",
    0x19: "Brave Lance",
    0x1A: "Killer Lance",
    0x1B: "Horseslayer",
    0x1C: "Javelin",
    0x1D: "Spear",
    0x1E: "Axereaver",
    0x1F: "Iron Axe",
    0x20: "Steel Axe",
    0x21: "Silver Axe",
    0x22: "Poison Axe",
    0x23: "Brave Axe",
    0x24: "Killer Axe",
    0x25: "Halberd",
    0x26: "Hammer",
    0x27: "Devil Axe",
    0x28: "Hand Axe",
    0x29: "Tomahawk",
    0x2A: "Swordreaver",
    0x2B: "Swordslayer",
    0x2C: "Iron Bow",
    0x2D: "Steel Bow",
    0x2E: "Silver Bow",
    0x2F: "Poison Bow",
    0x30: "Killer Bow",
    0x31: "Brave Bow",
    0x32: "Short Bow",
    0x33: "Long Bow",
    0x34: "Ballista",
    0x35: "Iron Ballista",
    0x36: "Killer Ballista",
    0x37: "Fire",
    0x38: "Thunder",
    0x39: "Elfire",
    0x3A: "Bolting",
    0x3B: "Fimbulvetr",
    0x3C: "Forblaze",
    0x3D: "Excalibur",
    0x3E: "Lightning",
    0x3F: "Shine",
    0x40: "Divine",
    0x41: "Purge",
    0x42: "Aura",
    0x43: "Luce",
    0x44: "Flux",
    0x45: "Luna",
    0x46: "Nosferatu",
    0x47: "Eclipse",
    0x48: "Fenrir",
    0x49: "Gespenst",
    0x4A: "Heal",
    0x4B: "Mend",
    0x4C: "Recover",
    0x4D: "Physic",
    0x4E: "Fortify",
    0x4F: "Restore",
    0x50: "Silence",
    0x51: "Sleep",
    0x52: "Berserk",
    0x53: "Warp",
    0x54: "Rescue",
    0x55: "Torch",
    0x56: "Hammerne",
    0x57: "Unlock",
    0x58: "Barrier",
    0x59: "Dragon Axe",
    0x5A: "Angelic Robe",
    0x5B: "Energy Ring",
    0x5C: "Secret Book",
    0x5D: "Speedwings",
    0x5E: "Goddess Icon",
    0x5F: "Dragonshield",
    0x60: "Talisman",
    0x61: "Boots",
    0x62: "Body Ring",
    0x63: "Hero Crest",
    0x64: "Knight Crest",
    0x65: "Orion's Bolt",
    0x66: "Elysian Whip",
    0x67: "Guiding Ring",
    0x68: "Chest Key",
    0x69: "Door Key",
    0x6A: "Lockpick",
    0x6B: "Vulnerary",
    0x6C: "Elixir",
    0x6D: "Pure Water",
    0x6E: "Antitoxin",
    0x6F: "Torch",
    0x70: "Delphi Shield",
    0x71: "Member Card",
    0x72: "Silver Card",
    0x73: "White Gem",
    0x74: "Blue Gem",
    0x75: "Red Gem",
    0x77: "Vaida's Spear",
    0x78: "Chest Key",
    0x79: "Mine",
    0x7A: "Light Rune",
    0x7B: "Iron Rune",
    0x7C: "Filla's Might",
    0x7D: "Ninis's Grace",
    0x7E: "Thor's Ire",
    0x7F: "Set's Litany",
    0x80: "Emblem Blade",
    0x81: "Emblem Lance",
    0x82: "Emblem Axe",
    0x83: "Emblem Bow",
    0x84: "Durandal",
    0x85: "Armads",
    0x86: "Aureola",
    0x87: "Earth Seal",
    0x88: "Afa's Drops",
    0x89: "Heaven Seal",
    0x8A: "Emblem Seal",
    0x8B: "Fell Contract",
    0x8C: "Sol Katti",
    0x8D: "Wolf Beil",
    0x8E: "Ereshkigal",
    0x8F: "Flametongue",
    0x90: "Regal Blade",
    0x91: "Rex Hasta",
    0x92: "Basilikos",
    0x93: "Reinfleche",
    0x94: "Heavy Spear",
    0x95: "Short Spear",
    0x96: "Ocean Seal",
    0x99: "Wind Sword",
}

# Item attack ranges for weapons (min_range, max_range)
# Swords, Axes, Lances: 1
# Javelin, Hand Axe, Tomahawk, Spear, Short Spear: 1-2
# Bows: 2 (Long Bow: 2-3)
# Magic: 1-2 (Bolting, Purge, Eclipse: 3-10 or more)
ITEM_ATTACK_RANGES = {
    # Swords
    0x01: (1, 1), 0x02: (1, 1), 0x03: (1, 1), 0x04: (1, 1), 0x05: (1, 1), 0x06: (1, 1), 0x07: (1, 1), 0x08: (1, 1),
    0x09: (1, 1), 0x0A: (1, 1), 0x0B: (1, 1), 0x0C: (1, 1), 0x0D: (1, 1), 0x0E: (1, 1), 0x0F: (1, 1),
    0x10: (1, 2),  # Light Brand (melee: 1, ranged: 2, but only magic at range)
    0x11: (1, 2),  # Runesword (same as above)
    0x12: (1, 1), 0x13: (1, 1),
    # Lances
    0x14: (1, 1), 0x15: (1, 1), 0x16: (1, 1), 0x17: (1, 1), 0x18: (1, 1),
    0x19: (1, 1), 0x1A: (1, 1), 0x1B: (1, 1),
    0x1C: (1, 2),  # Javelin
    0x1D: (1, 2),  # Spear
    0x1E: (1, 1),
    # Axes
    0x1F: (1, 1), 0x20: (1, 1), 0x21: (1, 1), 0x22: (1, 1),
    0x23: (1, 1), 0x24: (1, 1), 0x25: (1, 1), 0x26: (1, 1), 0x27: (1, 1),
    0x28: (1, 2),  # Hand Axe
    0x29: (1, 2),  # Tomahawk
    0x2A: (1, 1), 0x2B: (1, 1),
    # Bows
    0x2C: (2, 2), 0x2D: (2, 2), 0x2E: (2, 2), 0x2F: (2, 2), 0x30: (2, 2), 0x31: (2, 2),
    0x32: (2, 2),
    0x33: (2, 3),  # Long Bow
    # Ballistae
    0x34: (3, 10), 0x35: (3, 10), 0x36: (3, 10),
    # Anima magic
    0x37: (1, 2), 0x38: (1, 2), 0x39: (1, 2),
    0x3A: (3, 10),  # Bolting
    0x3B: (1, 2), 0x3C: (1, 2), 0x3D: (1, 2),
    # Light magic
    0x3E: (1, 2), 0x3F: (1, 2), 0x40: (1, 2),
    0x41: (3, 10),  # Purge
    0x42: (1, 2), 0x43: (1, 2),
    # Dark magic
    0x44: (1, 2), 0x45: (1, 2), 0x46: (1, 2),
    0x47: (3, 10),  # Eclipse
    0x48: (1, 2), 0x49: (1, 2),
    # Special/legendary weapons (examples)
    0x84: (1, 1),  # Durandal
    0x85: (1, 1),  # Armads
    0x86: (1, 2),  # Aureola
    0x8C: (1, 1),  # Sol Katti
    0x8D: (1, 1),  # Wolf Beil
    0x91: (1, 1),  # Rex Hasta
    0x92: (1, 1),  # Basilikos
    0x93: (2, 2),  # Reinfleche (bow)
    0x99: (1, 2),  # Wind Sword
    # Add more as needed
}

# Portrait IDs
PORTRAIT_IDS = {
    0xCE4C: "Eliwood",
    0xCE80: "Hector",
    0xCEB4: "Lyn",
    0xCEE8: "Raven",
    0xCF1C: "Geitz",
    0xCF50: "Guy",
    0xCF84: "Karel",
    0xCFB8: "Dorcas",
    0xCFEC: "Bartre",
    0xD020: "Citizen",
    0xD054: "Oswin",
    0xD088: "Fargus",
    0xD0BC: "Wil",
    0xD0F0: "Rebecca",
    0xD124: "Louise",
    0xD158: "Lucius",
    0xD18C: "Serra",
    0xD1C0: "Renault",
    0xD1F4: "Erk",
    0xD228: "Nino",
    0xD25C: "Pent",
    0xD290: "Canas",
    0xD2C4: "Kent",
    0xD2F8: "Sain",
    0xD32C: "Lowen",
    0xD360: "Marcus",
    0xD394: "Priscilla",
    0xD3C8: "Rath",
    0xD3FC: "Florina",
    0xD430: "Fiora",
    0xD464: "Farina",
    0xD498: "Heath",
    0xD4CC: "Vaida",
    0xD500: "Hawkeye",
    0xD534: "Matthew",
    0xD568: "Jaffar",
    0xD59C: "Ninian",
    0xD5D0: "Nils",
    0xD604: "Athos",
    0xD638: "Merlinus",
    0xD66C: "Nils",
    0xD6A0: "Uther",
    0xD6D4: "Vaida",
    0xD708: "Wallace",
    0xD73C: "Lyn",
    0xD770: "Wil",
    0xD7A4: "Kent",
    0xD7D8: "Sain",
    0xD80C: "Florina",
    0xD840: "Rath",
    0xD874: "Dart",
    0xD8A8: "Isadora",
    0xD8DC: "Eleanora",
    0xD910: "Legault",
    0xD944: "Karla",
    0xD978: "Harken",
    0xD9AC: "Leila",
    0xD9E0: "Bramimond",
    0xDA14: "Kishuna",
    0xDA48: "Groznyi",
    0xDA7C: "Wire",
    0xDAB0: "Bandit",
    0xDAE4: "Zagan",
    0xDB18: "Boies",
    0xDB4C: "Puzon",
    0xDB80: "Bandit",
    0xDBB4: "Santals",
    0xDBE8: "Nergal",
    0xDC1C: "Erik",
    0xDC50: "Sealen",
    0xDC84: "Bauker",
    0xDCB8: "Bernard",
    0xDCEC: "Damian",
    0xDD20: "Zoldam",
    0xDD54: "Uhai",
    0xDD88: "Aion",
    0xDDBC: "Darin",
    0xDDF0: "Cameron",
    0xDE24: "Oleg",
    0xDE58: "Eubans",
    0xDE8C: "Ursula",
    0xDEC0: "Black Fang",
    0xDEF4: "Paul",
    0xDF28: "Jasmine",
    0xDF5C: "Black Fang",
    0xDF90: "Jerme (morph)",
    0xDFC4: "Pascal",
    0xDFF8: "Kenneth",
    0xE02C: "Jerme",
    0xE060: "Maxime",
    0xE094: "Sonia",
    0xE0C8: "Teodor",
    0xE0FC: "Georg",
    0xE130: "Kaim",
    0xE164: "Merc",
    0xE198: "Denning",
    0xE1CC: "Bern",
    0xE200: "Morph",
    0xE234: "Lloyd",
    0xE268: "Linus",
    0xE29C: "Lloyd",
    0xE2D0: "Linus",
    0xE304: "Bandit",
    0xE338: "Bandit",
    0xE36C: "Bandit",
    0xE3A0: "Laus",
    0xE3D4: "Laus",
    0xE408: "Pirate",
    0xE43C: "Black Fang",
    0xE470: "Black Fang",
    0xE4A4: "Ostia",
    0xE4D8: "Black Fang",
    0xE50C: "Guardian",
    0xE540: "Morph",
    0xE574: "Morph",
    0xE5A8: "Morph",
    0xE5DC: "Caelin",
    0xE610: "Caelin",
    0xE644: "Caelin",
    0xE678: "Laus",
    0xE6AC: "Laus",
    0xE6E0: "Zephiel",
    0xE714: "Elbert",
    0xE748: "Black Fang",
    0xE77C: "Black Fang",
    0xE7B0: "Black Fang",
    0xE7E4: "Morph",
    0xE818: "Morph",
    0xE84C: "Morph",
    0xE880: "Morph",
    0xE8B4: "Black Fang",
    0xE8E8: "Brendan",
    0xE91C: "Limstella",
    0xE950: "Dragon",
    0xE984: "Batta",
    0xE9B8: "Bandit",
    0xE9EC: "Zugu",
    0xEA20: "Bandit",
    0xEA54: "Bandit",
    0xEA88: "Bandit",
    0xEABC: "Glass",
    0xEAF0: "Migal",
    0xEB24: "Bandit",
    0xEB58: "Bandit",
    0xEB8C: "Bandit",
    0xEBC0: "Bandit",
    0xEBF4: "Bandit",
    0xEC28: "Carjiga",
    0xEC5C: "Bandit",
    0xEC90: "Bandit",
    0xECC4: "Bandit",
    0xECF8: "Bandit",
    0xED2C: "Bug",
    0xED60: "Bandit",
    0xED94: "Bandit",
    0xEDC8: "Bandit",
    0xEDFC: "Bandit",
    0xEE30: "Natalie",
    0xEE64: "Bool",
    0xEE98: "Bandit",
    0xEECC: "Bandit",
    0xEF00: "Bandit",
    0xEF34: "Bandit",
    0xEF68: "Bandit",
    0xEF9C: "Bandit",
    0xEFD0: "Heintz",
    0xF004: "Black Fang",
    0xF038: "Black Fang",
    0xF06C: "Black Fang",
    0xF0A0: "Black Fang",
    0xF0D4: "Black Fang",
    0xF108: "Black Fang",
    0xF13C: "Beyard",
    0xF170: "Black Fang",
    0xF1A4: "Black Fang",
    0xF1D8: "Black Fang",
    0xF20C: "Black Fang",
    0xF240: "Black Fang",
    0xF274: "Black Fang",
    0xF2A8: "Black Fang",
    0xF2DC: "Black Fang",
    0xF310: "Yogi",
    0xF344: "Caelin",
    0xF378: "Caelin",
    0xF3AC: "Caelin",
    0xF3E0: "Caelin",
    0xF414: "Caelin",
    0xF448: "Caelin",
    0xF47C: "Caelin",
    0xF4B0: "Eagler",
    0xF4E4: "Caelin",
    0xF518: "Caelin",
    0xF54C: "Caelin",
    0xF580: "Caelin",
    0xF5B4: "Caelin",
    0xF5E8: "Caelin",
    0xF61C: "Lundgren",
    0xF650: "Caelin",
    0xF684: "Caelin",
    0xF6B8: "Caelin",
    0xF6EC: "Caelin",
    0xF720: "Caelin",
    0xF754: "Caelin",
    0xF788: "Caelin",
    0xF7BC: "Tactician",
    0xF7F0: "Citizen",
    0xF824: "Citizen",
    0xF858: "Citizen",
    0xF88C: "Citizen",
    0xF8C0: "Citizen",
    0xF8F4: "Citizen",
    0xF928: "Citizen",
    0xF95C: "Citizen",
    0xF990: "Citizen",
    0xF9C4: "Merc",
    0xF9F8: "Pirate",
    0xFA2C: "Bandit",
    0xFA60: "Citizen",
    0xFA94: "Citizen",
    0xFAC8: "Citizen",
    0xFAFC: "Black Fang",
    0xFB30: "Black Fang",
    0xFB64: "Bandit",
    0xFB98: "Black Fang",
    0xFBCC: "Morph",
    0xFC00: "Black Fang",
    0xFC34: "Black Fang",
    0xFC68: "Bandit",
    0xFC9C: "Ostia",
    0xFCD0: "Rath's unit",
    0xFD04: "Bandit",
    0xFD38: "Bandit",
    0xFD6C: "Bern",
    0xFDA0: "Guardian",
    0xFDD4: "Morph",
    0xFE08: "Laus",
    0xFE3C: "Bandit",
    0xFE70: "Bandit",
    0xFEA4: "Bern",
    0xFED8: "Guardian",
    0xFF0C: "Morph",
    0xFF40: "Guardian",
    0xFF74: "Black Fang",
    0xFFA8: "Lloyd (morph)",
    0xFFDC: "Linus (morph)",
    0x00AC: "Kenneth (morph)",
    0x0010: "Brendan (morph)",
    0x00E0: "Darin (morph)",
    0x0078: "Ursula (morph)",
    0x0044: "Uhai (morph)"
}

# Class ID to name mapping - these are the full 16-bit CodeBreaker values
CLASS_NAMES = {
    0x01B0: "Lord (Eliwood)",
    0x0204: "Lord (Lyn)",
    0x0258: "Lord (Hector)",
    0x03A8: "Knight Lord",
    0x03FC: "Blade Lord",
    0x0450: "Great Lord",
    0x04A4: "Mercenary",
    0x04F8: "Mercenary (FE6)",
    0x054C: "Hero (M)",
    0x05A0: "Hero (F)",
    0x05F4: "Myrmidon (M)",
    0x0648: "Myrmidon (F)",
    0x069C: "Swordmaster (M)",
    0x06F0: "Swordmaster (F)",
    0x0744: "Fighter",
    0x0798: "Warrior",
    0x07EC: "Knight (M)",
    0x0840: "Knight (F)",
    0x0894: "General (M)",
    0x08E8: "General (F)",
    0x093C: "Archer (M)",
    0x0990: "Archer (F)",
    0x09E4: "Sniper (M)",
    0x0A38: "Sniper (F)",
    0x0A8C: "Monk",
    0x0AE0: "Cleric",
    0x0B34: "Bishop (M)",
    0x0B88: "Bishop (F)",
    0x0BDC: "Mage (M)",
    0x0C30: "Mage (F)",
    0x0C84: "Sage (M)",
    0x0CD8: "Sage (F)",
    0x0D2C: "Shaman (M)",
    0x0D80: "Shaman (F)",
    0x0DD4: "Druid (M)",
    0x0E28: "Druid (F)",
    0x0E7C: "Cavalier (M)",
    0x0ED0: "Cavalier (F)",
    0x0F24: "Paladin (M)",
    0x0F78: "Paladin (F)",
    0x0FCC: "Troubadour",
    0x1020: "Valkyrie",
    0x1074: "Nomad (M)",
    0x10C8: "Nomad (F)",
    0x111C: "Nomad Trooper (M)",
    0x1170: "Nomad Trooper (F)",
    0x11C4: "Pegasus Knight",
    0x1218: "Falcoknight",
    0x126C: "Wyvern Rider (M)",
    0x12C0: "Wyvern Rider (F)",
    0x1314: "Wyvern Lord (M)",
    0x1368: "Wyvern Lord (F)",
    0x13BC: "Soldier",
    0x1410: "Brigand",
    0x1464: "Pirate",
    0x14B8: "Berserker",
    0x150C: "Thief (M)",
    0x1560: "Thief (F)",
    0x15B4: "Assassin",
    0x1608: "Civilian (Dead)",
    0x165C: "Dancer",
    0x16B0: "Bard",
    0x1704: "Archsage",
    0x1758: "Magic Seal",
    0x17AC: "Transporter (Tent)",
    0x1800: "Dark Druid",
    0x1854: "Fire Dragon",
    0x18A8: "Civilian (M)",
    0x18FC: "Civilian (F)",
    0x1950: "Bard (Collapsed)",
    0x19A4: "Bramimond",
    0x19F8: "Peer (M)",
    0x1A4C: "Peer (F)",
    0x1AA0: "Prince",
    0x1AF4: "Queen",
    0x1B48: "Civilian",
    0x1B9C: "Corsair",
    0x1BF0: "Prince (Tactician Front)",
    0x1C44: "Prince (Tactician Lying)",
    0x1C98: "Prince (Tactician Back)",
    0x1CEC: "Child (Dancer Back)",
    0x1D40: "Fire Dragon (Ninian wounded)",
    0x1D94: "Dead Warrior",
    0x1DE8: "Child (M)",
    0x1E3C: "Child (F)",
    0x1E90: "Transporter (Cart)",
    0x1EE4: "Sage (Limstella)",
    0x1F38: "Ballista",
    0x1F8C: "Iron Ballista",
    0x1FE0: "Killer Ballista",
    0x2034: "Empty Ballista",
    0x2088: "Empty Iron Ballista",
    0x20DC: "Empty Killer Ballista",
}

_valid_move_types = ['Foot', 'Armours', 'Knights1', 'Knights2', 'Nomads', 'NomadTroopers', 'Fighters', 'Bandits',
                     'Pirates', 'Mages', 'Fliers']

_job_movement_type = {
    'Lord (Eliwood)': "Foot", 'Lord (Lyn)': "Foot", 'Lord (Hector)': "Foot",
    'Blade Lord': "Foot", 'Knight Lord': 'Knights2', 'Great Lord': 'Armours',
    'Bard': "Foot", 'Dancer': "Foot", 'Prince': "Foot",
    'Tent': "Foot", 'Wagon': "Foot", 'Soldier': "Foot",
    'Male Cavalier': 'Knights1', 'Female Cavalier': 'Knights1',
    'Male Paladin': 'Knights2', 'Female Paladin': 'Knights2',
    'Male Knight': 'Armours', 'Female Knight': 'Armours',
    'Male General': 'Armours', 'Female General': 'Armours',
    'Mercenary': "Foot",
    'Male Hero': "Foot", 'Female Hero': "Foot",
    'Male Myrmidon': "Foot", 'Female Myrmidon': "Foot",
    'Male Swordmaster': "Foot", 'Female Swordmaster': "Foot",
    'Male Thief': "Foot", 'Female Thief': "Foot",
    'Assassin': "Foot",
    'Male Archer': "Foot", 'Female Archer': "Foot",
    'Male Sniper': "Foot", 'Female Sniper': "Foot",
    'Male Nomad': 'Nomads', 'Female Nomad': 'Nomads',
    'Male Nomad Trooper': 'NomadTroopers', 'Female Nomad Trooper': 'NomadTroopers',
    'Male Wyvern Rider': 'Fliers', 'Female Wyvern Rider': 'Fliers',
    'Male Wyvern Lord': 'Fliers', 'Female Wyvern Lord': 'Fliers',
    'Male Mage': 'Mages', 'Female Mage': 'Mages',
    'Male Sage': 'Mages', 'Female Sage': 'Mages',
    'Monk': 'Mages', 'Cleric': 'Mages',
    'Male Bishop': 'Mages', 'Female Bishop': 'Mages',
    'Male Shaman': 'Mages', 'Female Shaman': 'Mages',
    'Male Druid': 'Mages', 'Female Druid': 'Mages',
    'Fighter': 'Fighters', 'Warrior': 'Fighters', 'Brigand': 'Bandits', 'Pirate': 'Pirates',
    'Corsair': 'Pirates', 'Berserker': 'Bandits',
    'Pegasus Knight': 'Fliers', 'Falcoknight': 'Fliers',
    'Troubadour': 'Knights1', 'Valkyrie': 'Knights2', 'Magic Seal': 'Mages',
    'Archsage': 'Mages', 'Dark Druid': 'Mages', 'Bramimond': 'Mages', 'Fire Dragon': 'Foot'
}

_movement_dict = {
    'Lord (Eliwood)': 5, 'Lord (Lyn)': 5, 'Lord (Hector)': 5,
    'Blade Lord': 6, 'Knight Lord': 7, 'Great Lord': 5,
    'Bard': 5, 'Dancer': 5, 'Prince': 5,
    'Tent': 0, 'Wagon': 5, 'Soldier': 5,
    'Male Cavalier': 7, 'Female Cavalier': 7,
    'Male Paladin': 8, 'Female Paladin': 8,
    'Male Knight': 4, 'Female Knight': 4,
    'Male General': 5, 'Female General': 5,
    'Mercenary': 5,
    'Male Hero': 6, 'Female Hero': 6,
    'Male Myrmidon': 5, 'Female Myrmidon': 5,
    'Male Swordmaster': 6, 'Female Swordmaster': 6,
    'Male Thief': 6, 'Female Thief': 6,
    'Assassin': 6,
    'Male Archer': 5, 'Female Archer': 5,
    'Male Sniper': 6, 'Female Sniper': 6,
    'Male Nomad': 7, 'Female Nomad': 7,
    'Male Nomad Trooper': 7, 'Female Nomad Trooper': 7,
    'Male Wyvern Rider': 7, 'Female Wyvern Rider': 7,
    'Male Wyvern Lord': 8, 'Female Wyvern Lord': 8,
    'Male Mage': 5, 'Female Mage': 5,
    'Male Sage': 6, 'Female Sage': 6,
    'Monk': 5, 'Cleric': 5,
    'Male Bishop': 6, 'Female Bishop': 6,
    'Male Shaman': 5, 'Female Shaman': 5,
    'Male Druid': 6, 'Female Druid': 6,
    'Fighter': 5, 'Warrior': 6, 'Brigand': 5, 'Pirate': 5, 'Corsair': 5, 'Berserker': 6,
    'Pegasus Knight': 7, 'Falcoknight': 8, 'Troubadour': 7, 'Valkyrie': 8, 'Magic Seal': 6,
    'Archsage': 6, 'Dark Druid': 6, 'Bramimond': 5, 'Fire Dragon': 0
}

def get_item_name(item_id):
    """Get the name of an item by its ID"""
    return ITEM_NAMES.get(item_id, f"Unknown Item (0x{item_id:02X})")

def get_character_name(char_id):
    """Get the name of a character by their ID"""
    # If not found in the internal character IDs, check portrait IDs
    if char_id in PORTRAIT_IDS:
        return PORTRAIT_IDS[char_id]

    return f"Unknown Character (0x{char_id:02X})"

def get_class_name(class_id):
    """Get the name of a class by its ID"""
    return CLASS_NAMES.get(class_id, f"Unknown Class (0x{class_id:02X})")

def get_weapon_type(item_id):
    """Determine weapon type from item ID"""
    if item_id == 0:
        return None
    elif 0x01 <= item_id <= 0x13:
        return "Sword"
    elif 0x14 <= item_id <= 0x1E:
        return "Lance"
    elif 0x1F <= item_id <= 0x2B:
        return "Axe"
    elif 0x2C <= item_id <= 0x36:
        return "Bow"
    elif 0x37 <= item_id <= 0x3D:
        return "Anima"
    elif 0x3E <= item_id <= 0x43:
        return "Light"
    elif 0x44 <= item_id <= 0x49:
        return "Dark"
    elif 0x4A <= item_id <= 0x58:
        return "Staff"
    elif 0x99 == item_id:
        return "Sword"  # Wind Sword
    else:
        return "Item"  # Non-weapon item

def parse_weapon_rank(rank_value):
    """Convert numeric weapon rank to letter rank"""
    if rank_value == 0:
        return "-"
    elif rank_value >= 0xFB:  # 251-255
        return "S"
    elif rank_value >= 0xB5:  # 181-250
        return "A"
    elif rank_value >= 0x79:  # 121-180
        return "B"
    elif rank_value >= 0x47:  # 71-120
        return "C"
    elif rank_value >= 0x1F:  # 31-70
        return "D"
    elif rank_value >= 0x01:  # 1-30
        return "E"
    else:
        return "?"